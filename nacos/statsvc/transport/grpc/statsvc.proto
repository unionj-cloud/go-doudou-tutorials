/**
* Generated by go-doudou v1.3.7.
* Don't edit!
*
* Version No.: v20221012
*/
syntax = "proto3";

package statsvc;
option go_package = "statsvc/transport/grpc";

import "google/protobuf/any.proto";


message AddRpcRequest {
  int32 x = 1 [json_name="x"];
  int32 y = 2 [json_name="y"];
}

message AddRpcResponse {
  int32 data = 1 [json_name="data"];
}

message GetEchoRpcRequest {
  string s = 1 [json_name="s"];
}

message GetEchoRpcResponse {
  string data = 1 [json_name="data"];
}

message Order {
  string col = 1 [json_name="Col"];
  string sort = 2 [json_name="Sort"];
}

message Page {
  // 排序规则
  repeated Order orders = 1 [json_name="Orders"];
  // 页码
  int32 page_no = 2 [json_name="PageNo"];
  // 每页行数
  int32 size = 3 [json_name="Size"];
}

message PageFilter {
  // 真实姓名，前缀匹配
  string name = 1 [json_name="Name"];
  // 所属部门ID
  int32 dept = 2 [json_name="Dept"];
}

// 分页筛选条件
message PageQuery {
  PageFilter filter = 1 [json_name="Filter"];
  Page page = 2 [json_name="Page"];
}

message PageRet {
  google.protobuf.Any items = 1 [json_name="Items"];
  int32 page_no = 2 [json_name="PageNo"];
  int32 page_size = 3 [json_name="PageSize"];
  int32 total = 4 [json_name="Total"];
  bool has_next = 5 [json_name="HasNext"];
}

message UserVo {
  int32 id = 1 [json_name="Id"];
  string name = 2 [json_name="Name"];
  string phone = 3 [json_name="Phone"];
  string dept = 4 [json_name="Dept"];
}

service StatsvcService {
  rpc AddRpc(AddRpcRequest) returns (AddRpcResponse);
  rpc GetEchoRpc(GetEchoRpcRequest) returns (GetEchoRpcResponse);
}
