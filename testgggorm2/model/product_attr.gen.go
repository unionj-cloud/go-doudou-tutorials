// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"fmt"
	"testgggorm2/config"

	"github.com/unionj-cloud/go-doudou/v2/toolkit/stringutils"
)

var TableNameProductAttr string

func init() {
	if stringutils.IsNotEmpty(config.G_Config.Db.Name) {
		TableNameProductAttr = fmt.Sprintf("%s.product_attr", config.G_Config.Db.Name)
	} else {
		TableNameProductAttr = "product_attr"
	}
}

// ProductAttr mapped from table <product_attr>
type ProductAttr struct {
	ID              int32   `gorm:"column:id;type:int(11);primaryKey;autoIncrement:true" json:"id,omitempty"`
	ProductID       *int32  `gorm:"column:product_id;type:int(11);comment:商品编号" json:"productId,omitempty"`                // 商品编号
	AttributeCateID *int32  `gorm:"column:attribute_cate_id;type:int(10);comment:属性分类编号" json:"attributeCateId,omitempty"` // 属性分类编号
	AttributeID     *int32  `gorm:"column:attribute_id;type:int(10);comment:属性编号" json:"attributeId,omitempty"`            // 属性编号
	AttributeTitle  *string `gorm:"column:attribute_title;type:varchar(100);comment:属性标题" json:"attributeTitle,omitempty"` // 属性标题
	AttributeType   *int32  `gorm:"column:attribute_type;type:int(10);comment:属性类型" json:"attributeType,omitempty"`        // 属性类型
	AttributeValue  *string `gorm:"column:attribute_value;type:varchar(100);comment:属性值" json:"attributeValue,omitempty"`  // 属性值
	Sort            *int32  `gorm:"column:sort;type:int(10);comment:排序" json:"sort,omitempty"`                             // 排序
	AddTime         *int32  `gorm:"column:add_time;type:int(10);comment:添加时间" json:"addTime,omitempty"`                    // 添加时间
	Status          *int32  `gorm:"column:status;type:tinyint(4);comment:状态" json:"status,omitempty"`                      // 状态
}

// TableName ProductAttr's table name
func (*ProductAttr) TableName() string {
	return TableNameProductAttr
}
