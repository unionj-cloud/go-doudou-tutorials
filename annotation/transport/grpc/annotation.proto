/**
* Generated by go-doudou v2.0.0.
* Don't edit!
*
* Version No.: v20221024
*/
syntax = "proto3";

package annotation;
option go_package = "annotation/transport/grpc";

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

enum RoleEnum {
  GUEST = 0;
  USER = 1;
  ADMIN = 2;
}

message Auth {
  string user = 1 [json_name="User"];
  string pass = 2 [json_name="Pass"];
}

message GetAdminRpcResponse {
  string data = 1 [json_name="data"];
}

message GetGuestRpcResponse {
  string data = 1 [json_name="data"];
}

message GetUserRpcResponse {
  string data = 1 [json_name="data"];
}

message Order {
  string col = 1 [json_name="Col"];
  string sort = 2 [json_name="Sort"];
}

message Page {
  // 排序规则
  repeated Order orders = 1 [json_name="Orders"];
  // 页码
  int32 page_no = 2 [json_name="PageNo"];
  // 每页行数
  int32 size = 3 [json_name="Size"];
}

message PageFilter {
  // 真实姓名，前缀匹配
  string name = 1 [json_name="Name"];
  // 所属部门ID
  int32 dept = 2 [json_name="Dept"];
}

// 分页筛选条件
message PageQuery {
  PageFilter filter = 1 [json_name="Filter"];
  Page page = 2 [json_name="Page"];
}

message PageRet {
  google.protobuf.Any items = 1 [json_name="Items"];
  int32 page_no = 2 [json_name="PageNo"];
  int32 page_size = 3 [json_name="PageSize"];
  int32 total = 4 [json_name="Total"];
  bool has_next = 5 [json_name="HasNext"];
}

message UserVo {
  int32 id = 1 [json_name="Id"];
  string name = 2 [json_name="Name"];
  string phone = 3 [json_name="Phone"];
  string dept = 4 [json_name="Dept"];
}

service AnnotationService {
  // 此接口可公开访问，无需校验登录和权限
  rpc GetGuestRpc(google.protobuf.Empty) returns (GetGuestRpcResponse);
  // 此接口只有登录用户有权访问
// @role(USER,ADMIN)
  rpc GetUserRpc(google.protobuf.Empty) returns (GetUserRpcResponse);
  // 此接口只有管理员有权访问
// @role(ADMIN)
  rpc GetAdminRpc(google.protobuf.Empty) returns (GetAdminRpcResponse);
}
