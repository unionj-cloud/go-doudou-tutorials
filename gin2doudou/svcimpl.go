/**
* Generated by go-doudou v2.0.5.
* You can edit it as your need.
 */
package service

import (
	"context"
	"gin2doudou/config"
	"gin2doudou/dto"

	"github.com/brianvoe/gofakeit/v6"
)

var _ Gin2Doudou = (*Gin2DoudouImpl)(nil)

type Gin2DoudouImpl struct {
	conf *config.Config
}

func (receiver *Gin2DoudouImpl) ApiV1Menus(ctx context.Context, bodyJSON dto.SchemaMenu) (ret dto.SchemaIDResult, err error) {
	var _result struct {
		Ret dto.SchemaIDResult
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) ApiV1PubLogin(ctx context.Context, bodyJSON dto.SchemaLoginParam) (ret dto.SchemaLoginTokenInfo, err error) {
	var _result struct {
		Ret dto.SchemaLoginTokenInfo
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) ApiV1PubLoginExit(ctx context.Context) (ret dto.SchemaStatusResult, err error) {
	var _result struct {
		Ret dto.SchemaStatusResult
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) ApiV1PubRefreshtoken(ctx context.Context) (ret dto.SchemaLoginTokenInfo, err error) {
	var _result struct {
		Ret dto.SchemaLoginTokenInfo
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) ApiV1Roles(ctx context.Context, bodyJSON dto.SchemaRole) (ret dto.SchemaIDResult, err error) {
	var _result struct {
		Ret dto.SchemaIDResult
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) ApiV1Users(ctx context.Context, bodyJSON dto.SchemaUser) (ret dto.SchemaIDResult, err error) {
	var _result struct {
		Ret dto.SchemaIDResult
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) DeleteApiV1Menus_Id(ctx context.Context, id int) (ret dto.SchemaStatusResult, err error) {
	var _result struct {
		Ret dto.SchemaStatusResult
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) DeleteApiV1Roles_Id(ctx context.Context, id int) (ret dto.SchemaStatusResult, err error) {
	var _result struct {
		Ret dto.SchemaStatusResult
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) DeleteApiV1Users_Id(ctx context.Context, id int) (ret dto.SchemaStatusResult, err error) {
	var _result struct {
		Ret dto.SchemaStatusResult
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) GetApiV1Menus(ctx context.Context, current int, pageSize int, queryValue *string, status *int, isShow *int, parentID *int) (ret interface{}, err error) {
	var _result struct {
		Ret interface{}
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) GetApiV1Menus_Id(ctx context.Context, id int) (ret dto.SchemaMenu, err error) {
	var _result struct {
		Ret dto.SchemaMenu
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) GetApiV1Menustree(ctx context.Context, status *int, parentID *int) (ret interface{}, err error) {
	var _result struct {
		Ret interface{}
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) GetApiV1PubCurrentMenutree(ctx context.Context) (ret interface{}, err error) {
	var _result struct {
		Ret interface{}
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) GetApiV1PubCurrentUser(ctx context.Context) (ret dto.SchemaUserLoginInfo, err error) {
	var _result struct {
		Ret dto.SchemaUserLoginInfo
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) GetApiV1PubLoginCaptcha(ctx context.Context, id string, reload *string) (ret string, err error) {
	var _result struct {
		Ret string
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) GetApiV1PubLoginCaptchaid(ctx context.Context) (ret dto.SchemaLoginCaptcha, err error) {
	var _result struct {
		Ret dto.SchemaLoginCaptcha
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) GetApiV1Roles(ctx context.Context, current int, pageSize int, queryValue *string, status *int) (ret interface{}, err error) {
	var _result struct {
		Ret interface{}
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) GetApiV1Roles_Id(ctx context.Context, id int) (ret dto.SchemaRole, err error) {
	var _result struct {
		Ret dto.SchemaRole
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) GetApiV1Rolesselect(ctx context.Context, queryValue *string, status *int) (ret interface{}, err error) {
	var _result struct {
		Ret interface{}
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) GetApiV1Users(ctx context.Context, current int, pageSize int, queryValue *string, roleIDs *string, status *int) (ret interface{}, err error) {
	var _result struct {
		Ret interface{}
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) GetApiV1Users_Id(ctx context.Context, id int) (ret dto.SchemaUser, err error) {
	var _result struct {
		Ret dto.SchemaUser
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) PutApiV1Menus_Id(ctx context.Context, id int, bodyJSON dto.SchemaMenu) (ret dto.SchemaStatusResult, err error) {
	var _result struct {
		Ret dto.SchemaStatusResult
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) PutApiV1PubCurrentPassword(ctx context.Context, bodyJSON dto.SchemaUpdatePasswordParam) (ret dto.SchemaStatusResult, err error) {
	var _result struct {
		Ret dto.SchemaStatusResult
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) PutApiV1Roles_Id(ctx context.Context, id int, bodyJSON dto.SchemaRole) (ret dto.SchemaRole, err error) {
	var _result struct {
		Ret dto.SchemaRole
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}
func (receiver *Gin2DoudouImpl) PutApiV1Users_Id(ctx context.Context, id int, bodyJSON dto.SchemaUser) (ret dto.SchemaUser, err error) {
	var _result struct {
		Ret dto.SchemaUser
	}
	_ = gofakeit.Struct(&_result)
	return _result.Ret, nil
}

func NewGin2Doudou(conf *config.Config) *Gin2DoudouImpl {
	return &Gin2DoudouImpl{
		conf: conf,
	}
}
