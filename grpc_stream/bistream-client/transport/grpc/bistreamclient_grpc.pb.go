// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BistreamClientServiceClient is the client API for BistreamClientService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BistreamClientServiceClient interface {
	// You can define your service methods as your need. Below is an example.
	// You can also add annotations here like @role(admin) to add meta data to routes for
	// implementing your own middlewares
	PageUsersRpc(ctx context.Context, in *PageQuery, opts ...grpc.CallOption) (*PageRet, error)
}

type bistreamClientServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBistreamClientServiceClient(cc grpc.ClientConnInterface) BistreamClientServiceClient {
	return &bistreamClientServiceClient{cc}
}

func (c *bistreamClientServiceClient) PageUsersRpc(ctx context.Context, in *PageQuery, opts ...grpc.CallOption) (*PageRet, error) {
	out := new(PageRet)
	err := c.cc.Invoke(ctx, "/bistream_client.BistreamClientService/PageUsersRpc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BistreamClientServiceServer is the server API for BistreamClientService service.
// All implementations must embed UnimplementedBistreamClientServiceServer
// for forward compatibility
type BistreamClientServiceServer interface {
	// You can define your service methods as your need. Below is an example.
	// You can also add annotations here like @role(admin) to add meta data to routes for
	// implementing your own middlewares
	PageUsersRpc(context.Context, *PageQuery) (*PageRet, error)
	mustEmbedUnimplementedBistreamClientServiceServer()
}

// UnimplementedBistreamClientServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBistreamClientServiceServer struct {
}

func (UnimplementedBistreamClientServiceServer) PageUsersRpc(context.Context, *PageQuery) (*PageRet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PageUsersRpc not implemented")
}
func (UnimplementedBistreamClientServiceServer) mustEmbedUnimplementedBistreamClientServiceServer() {}

// UnsafeBistreamClientServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BistreamClientServiceServer will
// result in compilation errors.
type UnsafeBistreamClientServiceServer interface {
	mustEmbedUnimplementedBistreamClientServiceServer()
}

func RegisterBistreamClientServiceServer(s grpc.ServiceRegistrar, srv BistreamClientServiceServer) {
	s.RegisterService(&BistreamClientService_ServiceDesc, srv)
}

func _BistreamClientService_PageUsersRpc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PageQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BistreamClientServiceServer).PageUsersRpc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bistream_client.BistreamClientService/PageUsersRpc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BistreamClientServiceServer).PageUsersRpc(ctx, req.(*PageQuery))
	}
	return interceptor(ctx, in, info, handler)
}

// BistreamClientService_ServiceDesc is the grpc.ServiceDesc for BistreamClientService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BistreamClientService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bistream_client.BistreamClientService",
	HandlerType: (*BistreamClientServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PageUsersRpc",
			Handler:    _BistreamClientService_PageUsersRpc_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transport/grpc/bistreamclient.proto",
}
