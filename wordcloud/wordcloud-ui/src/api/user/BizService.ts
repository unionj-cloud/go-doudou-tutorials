/**
 * Generated by unionj-generator.
 * You can edit it as your need.
 */

import { err } from '/@/api/interceptor/err';
import { requestUse } from '/@/api/interceptor/normal_request';
import { responseUse } from '/@/api/interceptor/response';
import { useGlobSetting } from '/@/hooks/setting';

const { userUrl = '' } = useGlobSetting();

export class BizService {
  static serverName: string | undefined = userUrl;

  axios: any;

  constructor(axios: any) {
    this.axios = axios;
    this.axios.interceptors.request.use(requestUse, err);
    this.axios.interceptors.response.use(responseUse, err);
  }

  protected addPrefix(endpoint: string) {
    if (BizService.serverName) {
      if (BizService.serverName.indexOf('/') === 0 || BizService.serverName.indexOf('http') === 0) {
        return BizService.serverName + endpoint;
      }
      return '/' + BizService.serverName + endpoint;
    }
    return endpoint;
  }
}

export default BizService;
