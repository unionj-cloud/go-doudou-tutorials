// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameQrtzFiredTrigger = "qrtz_fired_triggers"

// QrtzFiredTrigger mapped from table <qrtz_fired_triggers>
type QrtzFiredTrigger struct {
	SCHEDNAME        *string `gorm:"column:SCHED_NAME;type:varchar(120)" json:"SCHED_NAME,omitempty"`
	ENTRYID          *string `gorm:"column:ENTRY_ID;type:varchar(95)" json:"ENTRY_ID,omitempty"`
	TRIGGERNAME      *string `gorm:"column:TRIGGER_NAME;type:varchar(200)" json:"TRIGGER_NAME,omitempty"`
	TRIGGERGROUP     *string `gorm:"column:TRIGGER_GROUP;type:varchar(200)" json:"TRIGGER_GROUP,omitempty"`
	INSTANCENAME     *string `gorm:"column:INSTANCE_NAME;type:varchar(200)" json:"INSTANCE_NAME,omitempty"`
	FIREDTIME        *int64  `gorm:"column:FIRED_TIME;type:bigint(20)" json:"FIRED_TIME,omitempty"`
	SCHEDTIME        *int64  `gorm:"column:SCHED_TIME;type:bigint(20)" json:"SCHED_TIME,omitempty"`
	PRIORITY         *int32  `gorm:"column:PRIORITY;type:int(11)" json:"PRIORITY,omitempty"`
	STATE            *string `gorm:"column:STATE;type:varchar(16)" json:"STATE,omitempty"`
	JOBNAME          *string `gorm:"column:JOB_NAME;type:varchar(200)" json:"JOB_NAME,omitempty"`
	JOBGROUP         *string `gorm:"column:JOB_GROUP;type:varchar(200)" json:"JOB_GROUP,omitempty"`
	ISNONCONCURRENT  *string `gorm:"column:IS_NONCONCURRENT;type:varchar(1)" json:"IS_NONCONCURRENT,omitempty"`
	REQUESTSRECOVERY *string `gorm:"column:REQUESTS_RECOVERY;type:varchar(1)" json:"REQUESTS_RECOVERY,omitempty"`
}

// TableName QrtzFiredTrigger's table name
func (*QrtzFiredTrigger) TableName() string {
	return TableNameQrtzFiredTrigger
}
