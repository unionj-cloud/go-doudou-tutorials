/**
* Generated by go-doudou v2.0.1.
* Don't edit!
 */
package httpsrv

import (
	"net/http"

	"github.com/unionj-cloud/go-doudou/v2/framework"
	"github.com/unionj-cloud/go-doudou/v2/framework/rest"
)

type UsersvcHandler interface {
	PageUsers(w http.ResponseWriter, r *http.Request)
	GetUser(w http.ResponseWriter, r *http.Request)
	GetMe(w http.ResponseWriter, r *http.Request)
	PublicSignUp(w http.ResponseWriter, r *http.Request)
	PublicLogIn(w http.ResponseWriter, r *http.Request)
	UploadAvatar(w http.ResponseWriter, r *http.Request)
	GetPublicDownloadAvatar(w http.ResponseWriter, r *http.Request)
	GetLogout(w http.ResponseWriter, r *http.Request)
	PublicTokenValidate(w http.ResponseWriter, r *http.Request)
}

func Routes(handler UsersvcHandler) []rest.Route {
	return []rest.Route{
		{
			Name:        "PageUsers",
			Method:      "POST",
			Pattern:     "/page/users",
			HandlerFunc: handler.PageUsers,
		},
		{
			Name:        "GetUser",
			Method:      "GET",
			Pattern:     "/user",
			HandlerFunc: handler.GetUser,
		},
		{
			Name:        "GetMe",
			Method:      "GET",
			Pattern:     "/me",
			HandlerFunc: handler.GetMe,
		},
		{
			Name:        "PublicSignUp",
			Method:      "POST",
			Pattern:     "/public/sign/up",
			HandlerFunc: handler.PublicSignUp,
		},
		{
			Name:        "PublicLogIn",
			Method:      "POST",
			Pattern:     "/public/log/in",
			HandlerFunc: handler.PublicLogIn,
		},
		{
			Name:        "UploadAvatar",
			Method:      "POST",
			Pattern:     "/upload/avatar",
			HandlerFunc: handler.UploadAvatar,
		},
		{
			Name:        "GetPublicDownloadAvatar",
			Method:      "GET",
			Pattern:     "/public/download/avatar",
			HandlerFunc: handler.GetPublicDownloadAvatar,
		},
		{
			Name:        "GetLogout",
			Method:      "GET",
			Pattern:     "/logout",
			HandlerFunc: handler.GetLogout,
		},
		{
			Name:        "PublicTokenValidate",
			Method:      "POST",
			Pattern:     "/public/token/validate",
			HandlerFunc: handler.PublicTokenValidate,
		},
	}
}

var RouteAnnotationStore = framework.AnnotationStore{
	"PageUsers": {
		{
			Name: "@role",
			Params: []string{
				"USER",
			},
		},
	},
	"GetUser": {
		{
			Name: "@role",
			Params: []string{
				"USER",
			},
		},
	},
	"GetMe": {
		{
			Name: "@role",
			Params: []string{
				"USER",
			},
		},
	},
	"UploadAvatar": {
		{
			Name: "@role",
			Params: []string{
				"USER",
			},
		},
	},
	"GetLogout": {
		{
			Name: "@role",
			Params: []string{
				"USER",
			},
		},
	},
}
