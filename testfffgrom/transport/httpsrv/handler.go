/**
* Generated by go-doudou v2.1.1.
* Don't edit!
 */
package httpsrv

import (
	"net/http"

	"github.com/unionj-cloud/go-doudou/v2/framework"
	"github.com/unionj-cloud/go-doudou/v2/framework/rest"
)

type TestfffgromHandler interface {
	PostTAuthor(w http.ResponseWriter, r *http.Request)
	GetTAuthor_Id(w http.ResponseWriter, r *http.Request)
	PutTAuthor(w http.ResponseWriter, r *http.Request)
	DeleteTAuthor_Id(w http.ResponseWriter, r *http.Request)
	GetTAuthors(w http.ResponseWriter, r *http.Request)
	PostTClient(w http.ResponseWriter, r *http.Request)
	GetTClient_Id(w http.ResponseWriter, r *http.Request)
	PutTClient(w http.ResponseWriter, r *http.Request)
	DeleteTClient_Id(w http.ResponseWriter, r *http.Request)
	GetTClients(w http.ResponseWriter, r *http.Request)
	PostTDept(w http.ResponseWriter, r *http.Request)
	GetTDept_Id(w http.ResponseWriter, r *http.Request)
	PutTDept(w http.ResponseWriter, r *http.Request)
	DeleteTDept_Id(w http.ResponseWriter, r *http.Request)
	GetTDepts(w http.ResponseWriter, r *http.Request)
	PostTInvalidToken(w http.ResponseWriter, r *http.Request)
	GetTInvalidToken_Id(w http.ResponseWriter, r *http.Request)
	PutTInvalidToken(w http.ResponseWriter, r *http.Request)
	DeleteTInvalidToken_Id(w http.ResponseWriter, r *http.Request)
	GetTInvalidTokens(w http.ResponseWriter, r *http.Request)
	PostTPost(w http.ResponseWriter, r *http.Request)
	GetTPost_Id(w http.ResponseWriter, r *http.Request)
	PutTPost(w http.ResponseWriter, r *http.Request)
	DeleteTPost_Id(w http.ResponseWriter, r *http.Request)
	GetTPosts(w http.ResponseWriter, r *http.Request)
	PostTUser(w http.ResponseWriter, r *http.Request)
	GetTUser_Id(w http.ResponseWriter, r *http.Request)
	PutTUser(w http.ResponseWriter, r *http.Request)
	DeleteTUser_Id(w http.ResponseWriter, r *http.Request)
	GetTUsers(w http.ResponseWriter, r *http.Request)
	PostTWordCloudTask(w http.ResponseWriter, r *http.Request)
	GetTWordCloudTask_Id(w http.ResponseWriter, r *http.Request)
	PutTWordCloudTask(w http.ResponseWriter, r *http.Request)
	DeleteTWordCloudTask_Id(w http.ResponseWriter, r *http.Request)
	GetTWordCloudTasks(w http.ResponseWriter, r *http.Request)
	PostTJjj(w http.ResponseWriter, r *http.Request)
	GetTJjj_Id(w http.ResponseWriter, r *http.Request)
	PutTJjj(w http.ResponseWriter, r *http.Request)
	DeleteTJjj_Id(w http.ResponseWriter, r *http.Request)
	GetTJjjs(w http.ResponseWriter, r *http.Request)
}

func Routes(handler TestfffgromHandler) []rest.Route {
	return []rest.Route{
		{
			Name:        "PostTAuthor",
			Method:      "POST",
			Pattern:     "/t/author",
			HandlerFunc: handler.PostTAuthor,
		},
		{
			Name:        "GetTAuthor_Id",
			Method:      "GET",
			Pattern:     "/t/author/:id",
			HandlerFunc: handler.GetTAuthor_Id,
		},
		{
			Name:        "PutTAuthor",
			Method:      "PUT",
			Pattern:     "/t/author",
			HandlerFunc: handler.PutTAuthor,
		},
		{
			Name:        "DeleteTAuthor_Id",
			Method:      "DELETE",
			Pattern:     "/t/author/:id",
			HandlerFunc: handler.DeleteTAuthor_Id,
		},
		{
			Name:        "GetTAuthors",
			Method:      "GET",
			Pattern:     "/t/authors",
			HandlerFunc: handler.GetTAuthors,
		},
		{
			Name:        "PostTClient",
			Method:      "POST",
			Pattern:     "/t/client",
			HandlerFunc: handler.PostTClient,
		},
		{
			Name:        "GetTClient_Id",
			Method:      "GET",
			Pattern:     "/t/client/:id",
			HandlerFunc: handler.GetTClient_Id,
		},
		{
			Name:        "PutTClient",
			Method:      "PUT",
			Pattern:     "/t/client",
			HandlerFunc: handler.PutTClient,
		},
		{
			Name:        "DeleteTClient_Id",
			Method:      "DELETE",
			Pattern:     "/t/client/:id",
			HandlerFunc: handler.DeleteTClient_Id,
		},
		{
			Name:        "GetTClients",
			Method:      "GET",
			Pattern:     "/t/clients",
			HandlerFunc: handler.GetTClients,
		},
		{
			Name:        "PostTDept",
			Method:      "POST",
			Pattern:     "/t/dept",
			HandlerFunc: handler.PostTDept,
		},
		{
			Name:        "GetTDept_Id",
			Method:      "GET",
			Pattern:     "/t/dept/:id",
			HandlerFunc: handler.GetTDept_Id,
		},
		{
			Name:        "PutTDept",
			Method:      "PUT",
			Pattern:     "/t/dept",
			HandlerFunc: handler.PutTDept,
		},
		{
			Name:        "DeleteTDept_Id",
			Method:      "DELETE",
			Pattern:     "/t/dept/:id",
			HandlerFunc: handler.DeleteTDept_Id,
		},
		{
			Name:        "GetTDepts",
			Method:      "GET",
			Pattern:     "/t/depts",
			HandlerFunc: handler.GetTDepts,
		},
		{
			Name:        "PostTInvalidToken",
			Method:      "POST",
			Pattern:     "/t/invalid/token",
			HandlerFunc: handler.PostTInvalidToken,
		},
		{
			Name:        "GetTInvalidToken_Id",
			Method:      "GET",
			Pattern:     "/t/invalid/token/:id",
			HandlerFunc: handler.GetTInvalidToken_Id,
		},
		{
			Name:        "PutTInvalidToken",
			Method:      "PUT",
			Pattern:     "/t/invalid/token",
			HandlerFunc: handler.PutTInvalidToken,
		},
		{
			Name:        "DeleteTInvalidToken_Id",
			Method:      "DELETE",
			Pattern:     "/t/invalid/token/:id",
			HandlerFunc: handler.DeleteTInvalidToken_Id,
		},
		{
			Name:        "GetTInvalidTokens",
			Method:      "GET",
			Pattern:     "/t/invalid/tokens",
			HandlerFunc: handler.GetTInvalidTokens,
		},
		{
			Name:        "PostTPost",
			Method:      "POST",
			Pattern:     "/t/post",
			HandlerFunc: handler.PostTPost,
		},
		{
			Name:        "GetTPost_Id",
			Method:      "GET",
			Pattern:     "/t/post/:id",
			HandlerFunc: handler.GetTPost_Id,
		},
		{
			Name:        "PutTPost",
			Method:      "PUT",
			Pattern:     "/t/post",
			HandlerFunc: handler.PutTPost,
		},
		{
			Name:        "DeleteTPost_Id",
			Method:      "DELETE",
			Pattern:     "/t/post/:id",
			HandlerFunc: handler.DeleteTPost_Id,
		},
		{
			Name:        "GetTPosts",
			Method:      "GET",
			Pattern:     "/t/posts",
			HandlerFunc: handler.GetTPosts,
		},
		{
			Name:        "PostTUser",
			Method:      "POST",
			Pattern:     "/t/user",
			HandlerFunc: handler.PostTUser,
		},
		{
			Name:        "GetTUser_Id",
			Method:      "GET",
			Pattern:     "/t/user/:id",
			HandlerFunc: handler.GetTUser_Id,
		},
		{
			Name:        "PutTUser",
			Method:      "PUT",
			Pattern:     "/t/user",
			HandlerFunc: handler.PutTUser,
		},
		{
			Name:        "DeleteTUser_Id",
			Method:      "DELETE",
			Pattern:     "/t/user/:id",
			HandlerFunc: handler.DeleteTUser_Id,
		},
		{
			Name:        "GetTUsers",
			Method:      "GET",
			Pattern:     "/t/users",
			HandlerFunc: handler.GetTUsers,
		},
		{
			Name:        "PostTWordCloudTask",
			Method:      "POST",
			Pattern:     "/t/word/cloud/task",
			HandlerFunc: handler.PostTWordCloudTask,
		},
		{
			Name:        "GetTWordCloudTask_Id",
			Method:      "GET",
			Pattern:     "/t/word/cloud/task/:id",
			HandlerFunc: handler.GetTWordCloudTask_Id,
		},
		{
			Name:        "PutTWordCloudTask",
			Method:      "PUT",
			Pattern:     "/t/word/cloud/task",
			HandlerFunc: handler.PutTWordCloudTask,
		},
		{
			Name:        "DeleteTWordCloudTask_Id",
			Method:      "DELETE",
			Pattern:     "/t/word/cloud/task/:id",
			HandlerFunc: handler.DeleteTWordCloudTask_Id,
		},
		{
			Name:        "GetTWordCloudTasks",
			Method:      "GET",
			Pattern:     "/t/word/cloud/tasks",
			HandlerFunc: handler.GetTWordCloudTasks,
		},
		{
			Name:        "PostTJjj",
			Method:      "POST",
			Pattern:     "/t/jjj",
			HandlerFunc: handler.PostTJjj,
		},
		{
			Name:        "GetTJjj_Id",
			Method:      "GET",
			Pattern:     "/t/jjj/:id",
			HandlerFunc: handler.GetTJjj_Id,
		},
		{
			Name:        "PutTJjj",
			Method:      "PUT",
			Pattern:     "/t/jjj",
			HandlerFunc: handler.PutTJjj,
		},
		{
			Name:        "DeleteTJjj_Id",
			Method:      "DELETE",
			Pattern:     "/t/jjj/:id",
			HandlerFunc: handler.DeleteTJjj_Id,
		},
		{
			Name:        "GetTJjjs",
			Method:      "GET",
			Pattern:     "/t/jjjs",
			HandlerFunc: handler.GetTJjjs,
		},
	}
}

var RouteAnnotationStore = framework.AnnotationStore{}
