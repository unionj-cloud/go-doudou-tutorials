/**
* Generated by go-doudou v2.0.5.
* Don't edit!
 */
package httpsrv

import (
	"net/http"

	"github.com/unionj-cloud/go-doudou/v2/framework"
	"github.com/unionj-cloud/go-doudou/v2/framework/rest"
)

type Gin2DoudouHandler interface {
	ApiV1Menus(w http.ResponseWriter, r *http.Request)
	ApiV1PubLogin(w http.ResponseWriter, r *http.Request)
	ApiV1PubLoginExit(w http.ResponseWriter, r *http.Request)
	ApiV1PubRefreshtoken(w http.ResponseWriter, r *http.Request)
	ApiV1Roles(w http.ResponseWriter, r *http.Request)
	ApiV1Users(w http.ResponseWriter, r *http.Request)
	DeleteApiV1Menus_Id(w http.ResponseWriter, r *http.Request)
	DeleteApiV1Roles_Id(w http.ResponseWriter, r *http.Request)
	DeleteApiV1Users_Id(w http.ResponseWriter, r *http.Request)
	GetApiV1Menus(w http.ResponseWriter, r *http.Request)
	GetApiV1Menus_Id(w http.ResponseWriter, r *http.Request)
	GetApiV1Menustree(w http.ResponseWriter, r *http.Request)
	GetApiV1PubCurrentMenutree(w http.ResponseWriter, r *http.Request)
	GetApiV1PubCurrentUser(w http.ResponseWriter, r *http.Request)
	GetApiV1PubLoginCaptcha(w http.ResponseWriter, r *http.Request)
	GetApiV1PubLoginCaptchaid(w http.ResponseWriter, r *http.Request)
	GetApiV1Roles(w http.ResponseWriter, r *http.Request)
	GetApiV1Roles_Id(w http.ResponseWriter, r *http.Request)
	GetApiV1Rolesselect(w http.ResponseWriter, r *http.Request)
	GetApiV1Users(w http.ResponseWriter, r *http.Request)
	GetApiV1Users_Id(w http.ResponseWriter, r *http.Request)
	PutApiV1Menus_Id(w http.ResponseWriter, r *http.Request)
	PutApiV1PubCurrentPassword(w http.ResponseWriter, r *http.Request)
	PutApiV1Roles_Id(w http.ResponseWriter, r *http.Request)
	PutApiV1Users_Id(w http.ResponseWriter, r *http.Request)
}

func Routes(handler Gin2DoudouHandler) []rest.Route {
	return []rest.Route{
		{
			Name:        "ApiV1Menus",
			Method:      "POST",
			Pattern:     "/api/v1/menus",
			HandlerFunc: handler.ApiV1Menus,
		},
		{
			Name:        "ApiV1PubLogin",
			Method:      "POST",
			Pattern:     "/api/v1/pub/login",
			HandlerFunc: handler.ApiV1PubLogin,
		},
		{
			Name:        "ApiV1PubLoginExit",
			Method:      "POST",
			Pattern:     "/api/v1/pub/login/exit",
			HandlerFunc: handler.ApiV1PubLoginExit,
		},
		{
			Name:        "ApiV1PubRefreshtoken",
			Method:      "POST",
			Pattern:     "/api/v1/pub/refreshtoken",
			HandlerFunc: handler.ApiV1PubRefreshtoken,
		},
		{
			Name:        "ApiV1Roles",
			Method:      "POST",
			Pattern:     "/api/v1/roles",
			HandlerFunc: handler.ApiV1Roles,
		},
		{
			Name:        "ApiV1Users",
			Method:      "POST",
			Pattern:     "/api/v1/users",
			HandlerFunc: handler.ApiV1Users,
		},
		{
			Name:        "DeleteApiV1Menus_Id",
			Method:      "DELETE",
			Pattern:     "/api/v1/menus/:id",
			HandlerFunc: handler.DeleteApiV1Menus_Id,
		},
		{
			Name:        "DeleteApiV1Roles_Id",
			Method:      "DELETE",
			Pattern:     "/api/v1/roles/:id",
			HandlerFunc: handler.DeleteApiV1Roles_Id,
		},
		{
			Name:        "DeleteApiV1Users_Id",
			Method:      "DELETE",
			Pattern:     "/api/v1/users/:id",
			HandlerFunc: handler.DeleteApiV1Users_Id,
		},
		{
			Name:        "GetApiV1Menus",
			Method:      "GET",
			Pattern:     "/api/v1/menus",
			HandlerFunc: handler.GetApiV1Menus,
		},
		{
			Name:        "GetApiV1Menus_Id",
			Method:      "GET",
			Pattern:     "/api/v1/menus/:id",
			HandlerFunc: handler.GetApiV1Menus_Id,
		},
		{
			Name:        "GetApiV1Menustree",
			Method:      "GET",
			Pattern:     "/api/v1/menustree",
			HandlerFunc: handler.GetApiV1Menustree,
		},
		{
			Name:        "GetApiV1PubCurrentMenutree",
			Method:      "GET",
			Pattern:     "/api/v1/pub/current/menutree",
			HandlerFunc: handler.GetApiV1PubCurrentMenutree,
		},
		{
			Name:        "GetApiV1PubCurrentUser",
			Method:      "GET",
			Pattern:     "/api/v1/pub/current/user",
			HandlerFunc: handler.GetApiV1PubCurrentUser,
		},
		{
			Name:        "GetApiV1PubLoginCaptcha",
			Method:      "GET",
			Pattern:     "/api/v1/pub/login/captcha",
			HandlerFunc: handler.GetApiV1PubLoginCaptcha,
		},
		{
			Name:        "GetApiV1PubLoginCaptchaid",
			Method:      "GET",
			Pattern:     "/api/v1/pub/login/captchaid",
			HandlerFunc: handler.GetApiV1PubLoginCaptchaid,
		},
		{
			Name:        "GetApiV1Roles",
			Method:      "GET",
			Pattern:     "/api/v1/roles",
			HandlerFunc: handler.GetApiV1Roles,
		},
		{
			Name:        "GetApiV1Roles_Id",
			Method:      "GET",
			Pattern:     "/api/v1/roles/:id",
			HandlerFunc: handler.GetApiV1Roles_Id,
		},
		{
			Name:        "GetApiV1Rolesselect",
			Method:      "GET",
			Pattern:     "/api/v1/rolesselect",
			HandlerFunc: handler.GetApiV1Rolesselect,
		},
		{
			Name:        "GetApiV1Users",
			Method:      "GET",
			Pattern:     "/api/v1/users",
			HandlerFunc: handler.GetApiV1Users,
		},
		{
			Name:        "GetApiV1Users_Id",
			Method:      "GET",
			Pattern:     "/api/v1/users/:id",
			HandlerFunc: handler.GetApiV1Users_Id,
		},
		{
			Name:        "PutApiV1Menus_Id",
			Method:      "PUT",
			Pattern:     "/api/v1/menus/:id",
			HandlerFunc: handler.PutApiV1Menus_Id,
		},
		{
			Name:        "PutApiV1PubCurrentPassword",
			Method:      "PUT",
			Pattern:     "/api/v1/pub/current/password",
			HandlerFunc: handler.PutApiV1PubCurrentPassword,
		},
		{
			Name:        "PutApiV1Roles_Id",
			Method:      "PUT",
			Pattern:     "/api/v1/roles/:id",
			HandlerFunc: handler.PutApiV1Roles_Id,
		},
		{
			Name:        "PutApiV1Users_Id",
			Method:      "PUT",
			Pattern:     "/api/v1/users/:id",
			HandlerFunc: handler.PutApiV1Users_Id,
		},
	}
}

var RouteAnnotationStore = framework.AnnotationStore{}
