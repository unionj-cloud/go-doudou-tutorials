/**
* Generated by go-doudou v2.0.0.
* You can edit it as your need.
 */
package main

import (
	"github.com/unionj-cloud/go-doudou/v2/framework/rest"
	service "github.com/unionj-cloud/helloworld"
	"github.com/unionj-cloud/helloworld/config"
	"github.com/unionj-cloud/helloworld/transport/httpsrv"
)

func main() {
	conf := config.LoadFromEnv()
	svc := service.NewHelloworld(conf)

	//go func() {
	//	grpcServer := grpcx.NewGrpcServer(
	//		grpc.StreamInterceptor(grpc_middleware.ChainStreamServer(
	//			grpc_ctxtags.StreamServerInterceptor(),
	//			grpc_opentracing.StreamServerInterceptor(),
	//			grpc_prometheus.StreamServerInterceptor,
	//			logging.StreamServerInterceptor(grpczerolog.InterceptorLogger(zlogger.Logger)),
	//			grpc_recovery.StreamServerInterceptor(),
	//		)),
	//		grpc.UnaryInterceptor(grpc_middleware.ChainUnaryServer(
	//			grpc_ctxtags.UnaryServerInterceptor(),
	//			grpc_opentracing.UnaryServerInterceptor(),
	//			grpc_prometheus.UnaryServerInterceptor,
	//			logging.UnaryServerInterceptor(grpczerolog.InterceptorLogger(zlogger.Logger)),
	//			grpc_recovery.UnaryServerInterceptor(),
	//		)),
	//	)
	//	pb.RegisterHelloworldServiceServer(grpcServer, svc)
	//	grpcServer.Run()
	//}()

	handler := httpsrv.NewHelloworldHandler(svc)
	srv := rest.NewRestServer()
	srv.AddRoute(httpsrv.Routes(handler)...)
	srv.Run()
}
