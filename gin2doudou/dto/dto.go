/**
* Generated by go-doudou v2.0.5.
* You can edit it as your need.
 */
package dto

//go:generate go-doudou name --file $GOFILE

type SchemaErrorItem struct {
	Code *int

	Message *string
}

type SchemaErrorResult struct {
	Error *SchemaErrorItem
}

type SchemaIDResult struct {
	Id *string
}

type SchemaListResult struct {
	List interface{}

	Pagination *SchemaPaginationResult
}

type SchemaLoginCaptcha struct {
	// 验证码ID
	CaptchaId *string
}

type SchemaLoginParam struct {
	// 验证码
	// required
	CaptchaCode string
	// 验证码ID
	// required
	CaptchaId string
	// 密码(md5加密)
	// required
	Password string
	// 用户名
	// required
	UserName string
}

type SchemaLoginTokenInfo struct {
	// 访问令牌
	AccessToken *string
	// 过期时间戳
	ExpiresAt *int
	// 令牌类型
	TokenType *string
}

type SchemaMenu struct {
	Actions *SchemaMenuActions
	// 创建时间
	CreatedAt *string
	// 创建者
	Creator *int
	// 菜单图标
	Icon *string
	// 唯一标识
	Id *string
	// 是否显示(1:显示 2:隐藏)
	// required
	IsShow int
	// 备注
	Memo *string
	// 菜单名称
	// required
	Name string
	// 父级ID
	ParentId *string
	// 父级路径
	ParentPath *string
	// 访问路由
	Router *string
	// 排序值
	Sequence *int
	// 状态(1:启用 2:禁用)
	// required
	Status int
	// 更新时间
	UpdatedAt *string
}

type SchemaMenuAction struct {
	// 动作编号
	// required
	Code string
	// 唯一标识
	Id *string
	// 菜单ID
	// required
	MenuId string
	// 动作名称
	// required
	Name string

	Resources *SchemaMenuActionResources
}

type SchemaMenuActionResource struct {
	// 菜单动作ID
	ActionId *string
	// 唯一标识
	Id *string
	// 资源请求方式(支持正则)
	// required
	Method string
	// 资源请求路径（支持/:id匹配）
	// required
	Path string
}

type SchemaMenuActionResources struct {
}

type SchemaMenuActions struct {
}

type SchemaMenuTree struct {
	Actions *SchemaMenuActions

	Children *SchemaMenuTrees
	// 菜单图标
	Icon *string
	// 唯一标识
	Id *string
	// 是否显示(1:显示 2:隐藏)
	IsShow *int
	// 菜单名称
	Name *string
	// 父级ID
	ParentId *string
	// 父级路径
	ParentPath *string
	// 访问路由
	Router *string
	// 排序值
	Sequence *int
	// 状态(1:启用 2:禁用)
	Status *int
}

type SchemaMenuTrees struct {
}

type SchemaPaginationResult struct {
	Current *int

	PageSize *int

	Total *int
}

type SchemaRole struct {
	// 创建时间
	CreatedAt *string
	// 创建者
	Creator *int
	// 唯一标识
	Id *string
	// 备注
	Memo *string
	// 角色名称
	// required
	Name string

	// required
	RoleMenus SchemaRoleMenus
	// 排序值
	Sequence *int
	// 状态(1:启用 2:禁用)
	// required
	Status int
	// 更新时间
	UpdatedAt *string
}

type SchemaRoleMenu struct {
	// 动作ID
	// required
	ActionId string
	// 唯一标识
	Id *string
	// 菜单ID
	// required
	MenuId string
	// 角色ID
	// required
	RoleId string
}

type SchemaRoleMenus struct {
}

type SchemaRoles struct {
}

type SchemaStatusResult struct {
	Status *string
}

type SchemaUpdatePasswordParam struct {
	// 新密码(md5加密)
	// required
	NewPassword string
	// 旧密码(md5加密)
	// required
	OldPassword string
}

type SchemaUser struct {
	// 创建时间
	CreatedAt *string
	// 创建者
	Creator *int
	// 邮箱
	Email *string
	// 唯一标识
	Id *string
	// 密码
	Password *string
	// 手机号
	Phone *string
	// 真实姓名
	// required
	RealName string
	// 用户状态(1:启用 2:停用)
	// required
	Status int
	// 用户名
	// required
	UserName string

	// required
	UserRoles SchemaUserRoles
}

type SchemaUserLoginInfo struct {
	// 真实姓名
	RealName *string

	Roles *SchemaRoles
	// 用户ID
	UserId *string
	// 用户名
	UserName *string
}

type SchemaUserRole struct {
	// 唯一标识
	Id *string
	// 角色ID
	RoleId *string
	// 用户ID
	UserId *string
}

type SchemaUserRoles struct {
}

type SchemaUserShow struct {
	// 创建时间
	CreatedAt *string
	// 邮箱
	Email *string
	// 唯一标识
	Id *string
	// 手机号
	Phone *string
	// 真实姓名
	RealName *string
	// 授权角色列表
	Roles []SchemaRole
	// 用户状态(1:启用 2:停用)
	Status *int
	// 用户名
	UserName *string
}
