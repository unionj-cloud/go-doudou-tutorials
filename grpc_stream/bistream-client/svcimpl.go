/**
* Generated by go-doudou v2.0.3.
* You can edit it as your need.
 */
package service

import (
	"context"
	"go-doudou-tutorials/bistream-client/config"
	"go-doudou-tutorials/bistream-client/vo"

	"github.com/brianvoe/gofakeit/v6"

	pb "go-doudou-tutorials/bistream-client/transport/grpc"
)

var _ BistreamClient = (*BistreamClientImpl)(nil)

var _ pb.BistreamClientServiceServer = (*BistreamClientImpl)(nil)

type BistreamClientImpl struct {
	pb.UnimplementedBistreamClientServiceServer

	conf *config.Config
}

func (receiver *BistreamClientImpl) PageUsers(ctx context.Context, query vo.PageQuery) (data vo.PageRet, err error) {
	var _result struct {
		Data vo.PageRet
	}
	_ = gofakeit.Struct(&_result)
	return _result.Data, nil
}

func NewBistreamClient(conf *config.Config) *BistreamClientImpl {
	return &BistreamClientImpl{
		conf: conf,
	}
}

func (receiver *BistreamClientImpl) PageUsersRpc(ctx context.Context, request *pb.PageQuery) (*pb.PageRet, error) {
	//TODO implement me
	panic("implement me")
}
