/**
* Generated by go-doudou v2.0.5.
* Don't edit!
*
* Version No.: v20230129
*/
syntax = "proto3";

package gin_2_doudou;
option go_package = "gin2doudou/transport/grpc";

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";


message DeleteApiV1MenusIdRpcRequest {
  // 唯一标识
// required
  int32 id = 1 [json_name="id"];
}

message DeleteApiV1RolesIdRpcRequest {
  // 唯一标识
// required
  int32 id = 1 [json_name="id"];
}

message DeleteApiV1UsersIdRpcRequest {
  // 唯一标识
// required
  int32 id = 1 [json_name="id"];
}

message GetApiV1MenusIdRpcRequest {
  // 唯一标识
// required
  int32 id = 1 [json_name="id"];
}

message GetApiV1MenusRpcRequest {
  // 分页索引
// required
  int32 current = 1 [json_name="current"];
  // 分页大小
// required
  int32 pageSize = 2 [json_name="pageSize"];
  // 查询值
  string queryValue = 3 [json_name="queryValue"];
  // 状态(1:启用 2:禁用)
  int32 status = 4 [json_name="status"];
  // 是否显示(1:显示 2:隐藏)
  int32 isShow = 5 [json_name="isShow"];
  // 父级ID
  int32 parentID = 6 [json_name="parentID"];
}

message GetApiV1MenustreeRpcRequest {
  // 状态(1:启用 2:禁用)
  int32 status = 1 [json_name="status"];
  // 父级ID
  int32 parentID = 2 [json_name="parentID"];
}

message GetApiV1PubLoginCaptchaRpcRequest {
  // 验证码ID
// required
  string id = 1 [json_name="id"];
  // 重新加载
  string reload = 2 [json_name="reload"];
}

message GetApiV1PubLoginCaptchaRpcResponse {
  string ret = 1 [json_name="ret"];
}

message GetApiV1RolesIdRpcRequest {
  // 唯一标识
// required
  int32 id = 1 [json_name="id"];
}

message GetApiV1RolesRpcRequest {
  // 分页索引
// required
  int32 current = 1 [json_name="current"];
  // 分页大小
// required
  int32 pageSize = 2 [json_name="pageSize"];
  // 查询值
  string queryValue = 3 [json_name="queryValue"];
  // 状态(1:启用 2:禁用)
  int32 status = 4 [json_name="status"];
}

message GetApiV1RolesselectRpcRequest {
  // 查询值
  string queryValue = 1 [json_name="queryValue"];
  // 状态(1:启用 2:禁用)
  int32 status = 2 [json_name="status"];
}

message GetApiV1UsersIdRpcRequest {
  // 唯一标识
// required
  int32 id = 1 [json_name="id"];
}

message GetApiV1UsersRpcRequest {
  // 分页索引
// required
  int32 current = 1 [json_name="current"];
  // 分页大小
// required
  int32 pageSize = 2 [json_name="pageSize"];
  // 查询值
  string queryValue = 3 [json_name="queryValue"];
  // 角色ID(多个以英文逗号分隔)
  string roleIDs = 4 [json_name="roleIDs"];
  // 状态(1:启用 2:停用)
  int32 status = 5 [json_name="status"];
}

message PutApiV1MenusIdRpcRequest {
  // 唯一标识
// required
  int32 id = 1 [json_name="id"];
  SchemaMenu bodyJSON = 2 [json_name="bodyJSON"];
}

message PutApiV1RolesIdRpcRequest {
  // 唯一标识
// required
  int32 id = 1 [json_name="id"];
  SchemaRole bodyJSON = 2 [json_name="bodyJSON"];
}

message PutApiV1UsersIdRpcRequest {
  // 唯一标识
// required
  int32 id = 1 [json_name="id"];
  SchemaUser bodyJSON = 2 [json_name="bodyJSON"];
}

message SchemaErrorItem {
  int32 code = 1 [json_name="code"];
  string message = 2 [json_name="message"];
}

message SchemaErrorResult {
  SchemaErrorItem error = 1 [json_name="error"];
}

message SchemaIDResult {
  string id = 1 [json_name="id"];
}

message SchemaListResult {
  google.protobuf.Any list = 1 [json_name="list"];
  SchemaPaginationResult pagination = 2 [json_name="pagination"];
}

message SchemaLoginCaptcha {
  // 验证码ID
  string captchaId = 1 [json_name="captchaId"];
}

message SchemaLoginParam {
  // 验证码
// required
  string captchaCode = 1 [json_name="captchaCode"];
  // 验证码ID
// required
  string captchaId = 2 [json_name="captchaId"];
  // 密码(md5加密)
// required
  string password = 3 [json_name="password"];
  // 用户名
// required
  string userName = 4 [json_name="userName"];
}

message SchemaLoginTokenInfo {
  // 访问令牌
  string accessToken = 1 [json_name="accessToken"];
  // 过期时间戳
  int32 expiresAt = 2 [json_name="expiresAt"];
  // 令牌类型
  string tokenType = 3 [json_name="tokenType"];
}

message SchemaMenu {
  SchemaMenuActions actions = 1 [json_name="actions"];
  // 创建时间
  string createdAt = 2 [json_name="createdAt"];
  // 创建者
  int32 creator = 3 [json_name="creator"];
  // 菜单图标
  string icon = 4 [json_name="icon"];
  // 唯一标识
  string id = 5 [json_name="id"];
  // 是否显示(1:显示 2:隐藏)
// required
  int32 isShow = 6 [json_name="isShow"];
  // 备注
  string memo = 7 [json_name="memo"];
  // 菜单名称
// required
  string name = 8 [json_name="name"];
  // 父级ID
  string parentId = 9 [json_name="parentId"];
  // 父级路径
  string parentPath = 10 [json_name="parentPath"];
  // 访问路由
  string router = 11 [json_name="router"];
  // 排序值
  int32 sequence = 12 [json_name="sequence"];
  // 状态(1:启用 2:禁用)
// required
  int32 status = 13 [json_name="status"];
  // 更新时间
  string updatedAt = 14 [json_name="updatedAt"];
}

message SchemaMenuAction {
  // 动作编号
// required
  string code = 1 [json_name="code"];
  // 唯一标识
  string id = 2 [json_name="id"];
  // 菜单ID
// required
  string menuId = 3 [json_name="menuId"];
  // 动作名称
// required
  string name = 4 [json_name="name"];
  SchemaMenuActionResources resources = 5 [json_name="resources"];
}

message SchemaMenuActionResource {
  // 菜单动作ID
  string actionId = 1 [json_name="actionId"];
  // 唯一标识
  string id = 2 [json_name="id"];
  // 资源请求方式(支持正则)
// required
  string method = 3 [json_name="method"];
  // 资源请求路径（支持/:id匹配）
// required
  string path = 4 [json_name="path"];
}

message SchemaMenuActionResources {
}

message SchemaMenuActions {
}

message SchemaMenuTree {
  SchemaMenuActions actions = 1 [json_name="actions"];
  SchemaMenuTrees children = 2 [json_name="children"];
  // 菜单图标
  string icon = 3 [json_name="icon"];
  // 唯一标识
  string id = 4 [json_name="id"];
  // 是否显示(1:显示 2:隐藏)
  int32 isShow = 5 [json_name="isShow"];
  // 菜单名称
  string name = 6 [json_name="name"];
  // 父级ID
  string parentId = 7 [json_name="parentId"];
  // 父级路径
  string parentPath = 8 [json_name="parentPath"];
  // 访问路由
  string router = 9 [json_name="router"];
  // 排序值
  int32 sequence = 10 [json_name="sequence"];
  // 状态(1:启用 2:禁用)
  int32 status = 11 [json_name="status"];
}

message SchemaMenuTrees {
}

message SchemaPaginationResult {
  int32 current = 1 [json_name="current"];
  int32 pageSize = 2 [json_name="pageSize"];
  int32 total = 3 [json_name="total"];
}

message SchemaRole {
  // 创建时间
  string createdAt = 1 [json_name="createdAt"];
  // 创建者
  int32 creator = 2 [json_name="creator"];
  // 唯一标识
  string id = 3 [json_name="id"];
  // 备注
  string memo = 4 [json_name="memo"];
  // 角色名称
// required
  string name = 5 [json_name="name"];
  // required
  SchemaRoleMenus roleMenus = 6 [json_name="roleMenus"];
  // 排序值
  int32 sequence = 7 [json_name="sequence"];
  // 状态(1:启用 2:禁用)
// required
  int32 status = 8 [json_name="status"];
  // 更新时间
  string updatedAt = 9 [json_name="updatedAt"];
}

message SchemaRoleMenu {
  // 动作ID
// required
  string actionId = 1 [json_name="actionId"];
  // 唯一标识
  string id = 2 [json_name="id"];
  // 菜单ID
// required
  string menuId = 3 [json_name="menuId"];
  // 角色ID
// required
  string roleId = 4 [json_name="roleId"];
}

message SchemaRoleMenus {
}

message SchemaRoles {
}

message SchemaStatusResult {
  string status = 1 [json_name="status"];
}

message SchemaUpdatePasswordParam {
  // 新密码(md5加密)
// required
  string newPassword = 1 [json_name="newPassword"];
  // 旧密码(md5加密)
// required
  string oldPassword = 2 [json_name="oldPassword"];
}

message SchemaUser {
  // 创建时间
  string createdAt = 1 [json_name="createdAt"];
  // 创建者
  int32 creator = 2 [json_name="creator"];
  // 邮箱
  string email = 3 [json_name="email"];
  // 唯一标识
  string id = 4 [json_name="id"];
  // 密码
  string password = 5 [json_name="password"];
  // 手机号
  string phone = 6 [json_name="phone"];
  // 真实姓名
// required
  string realName = 7 [json_name="realName"];
  // 用户状态(1:启用 2:停用)
// required
  int32 status = 8 [json_name="status"];
  // 用户名
// required
  string userName = 9 [json_name="userName"];
  // required
  SchemaUserRoles userRoles = 10 [json_name="userRoles"];
}

message SchemaUserLoginInfo {
  // 真实姓名
  string realName = 1 [json_name="realName"];
  SchemaRoles roles = 2 [json_name="roles"];
  // 用户ID
  string userId = 3 [json_name="userId"];
  // 用户名
  string userName = 4 [json_name="userName"];
}

message SchemaUserRole {
  // 唯一标识
  string id = 1 [json_name="id"];
  // 角色ID
  string roleId = 2 [json_name="roleId"];
  // 用户ID
  string userId = 3 [json_name="userId"];
}

message SchemaUserRoles {
}

message SchemaUserShow {
  // 创建时间
  string createdAt = 1 [json_name="createdAt"];
  // 邮箱
  string email = 2 [json_name="email"];
  // 唯一标识
  string id = 3 [json_name="id"];
  // 手机号
  string phone = 4 [json_name="phone"];
  // 真实姓名
  string realName = 5 [json_name="realName"];
  // 授权角色列表
  repeated SchemaRole roles = 6 [json_name="roles"];
  // 用户状态(1:启用 2:停用)
  int32 status = 7 [json_name="status"];
  // 用户名
  string userName = 8 [json_name="userName"];
}

service Gin2DoudouService {
  // ApiV1Menus 创建数据
  rpc ApiV1MenusRpc(SchemaMenu) returns (SchemaIDResult);
  // ApiV1PubLogin 用户登录
  rpc ApiV1PubLoginRpc(SchemaLoginParam) returns (SchemaLoginTokenInfo);
  // ApiV1PubLoginExit 用户登出
  rpc ApiV1PubLoginExitRpc(google.protobuf.Empty) returns (SchemaStatusResult);
  // ApiV1PubRefreshtoken 刷新令牌
  rpc ApiV1PubRefreshtokenRpc(google.protobuf.Empty) returns (SchemaLoginTokenInfo);
  // ApiV1Roles 创建数据
  rpc ApiV1RolesRpc(SchemaRole) returns (SchemaIDResult);
  // ApiV1Users 创建数据
  rpc ApiV1UsersRpc(SchemaUser) returns (SchemaIDResult);
  // DeleteApiV1Menus_Id 删除数据
  rpc DeleteApiV1MenusIdRpc(DeleteApiV1MenusIdRpcRequest) returns (SchemaStatusResult);
  // DeleteApiV1Roles_Id 删除数据
  rpc DeleteApiV1RolesIdRpc(DeleteApiV1RolesIdRpcRequest) returns (SchemaStatusResult);
  // DeleteApiV1Users_Id 删除数据
  rpc DeleteApiV1UsersIdRpc(DeleteApiV1UsersIdRpcRequest) returns (SchemaStatusResult);
  // GetApiV1Menus 查询数据
  rpc GetApiV1MenusRpc(GetApiV1MenusRpcRequest) returns (google.protobuf.Any);
  // GetApiV1Menus_Id 查询指定数据
  rpc GetApiV1MenusIdRpc(GetApiV1MenusIdRpcRequest) returns (SchemaMenu);
  // GetApiV1Menustree 查询菜单树
  rpc GetApiV1MenustreeRpc(GetApiV1MenustreeRpcRequest) returns (google.protobuf.Any);
  // GetApiV1PubCurrentMenutree 查询当前用户菜单树
  rpc GetApiV1PubCurrentMenutreeRpc(google.protobuf.Empty) returns (google.protobuf.Any);
  // GetApiV1PubCurrentUser 获取当前用户信息
  rpc GetApiV1PubCurrentUserRpc(google.protobuf.Empty) returns (SchemaUserLoginInfo);
  // GetApiV1PubLoginCaptcha 响应图形验证码
  rpc GetApiV1PubLoginCaptchaRpc(GetApiV1PubLoginCaptchaRpcRequest) returns (GetApiV1PubLoginCaptchaRpcResponse);
  // GetApiV1PubLoginCaptchaid 获取验证码信息
  rpc GetApiV1PubLoginCaptchaidRpc(google.protobuf.Empty) returns (SchemaLoginCaptcha);
  // GetApiV1Roles 查询数据
  rpc GetApiV1RolesRpc(GetApiV1RolesRpcRequest) returns (google.protobuf.Any);
  // GetApiV1Roles_Id 查询指定数据
  rpc GetApiV1RolesIdRpc(GetApiV1RolesIdRpcRequest) returns (SchemaRole);
  // GetApiV1Rolesselect 查询选择数据
  rpc GetApiV1RolesselectRpc(GetApiV1RolesselectRpcRequest) returns (google.protobuf.Any);
  // GetApiV1Users 查询数据
  rpc GetApiV1UsersRpc(GetApiV1UsersRpcRequest) returns (google.protobuf.Any);
  // GetApiV1Users_Id 查询指定数据
  rpc GetApiV1UsersIdRpc(GetApiV1UsersIdRpcRequest) returns (SchemaUser);
  // PutApiV1Menus_Id 更新数据
  rpc PutApiV1MenusIdRpc(PutApiV1MenusIdRpcRequest) returns (SchemaStatusResult);
  // PutApiV1PubCurrentPassword 更新个人密码
  rpc PutApiV1PubCurrentPasswordRpc(SchemaUpdatePasswordParam) returns (SchemaStatusResult);
  // PutApiV1Roles_Id 更新数据
  rpc PutApiV1RolesIdRpc(PutApiV1RolesIdRpcRequest) returns (SchemaRole);
  // PutApiV1Users_Id 更新数据
  rpc PutApiV1UsersIdRpc(PutApiV1UsersIdRpcRequest) returns (SchemaUser);
}
