/**
* Generated by go-doudou v2.1.1.
* Don't edit!
 */
package client

import (
	"context"
	"testgggorm/dto"

	"github.com/go-resty/resty/v2"
)

type Options struct {
	GzipReqBody bool
}

type ITestgggormClient interface {
	PostTInvalidToken(ctx context.Context, _headers map[string]string, body dto.TInvalidToken, options Options) (_resp *resty.Response, data int32, err error)
	PostTInvalidTokens(ctx context.Context, _headers map[string]string, body []dto.TInvalidToken, options Options) (_resp *resty.Response, data []int32, err error)
	GetTInvalidToken_Id(ctx context.Context, _headers map[string]string, id int32, options Options) (_resp *resty.Response, data dto.TInvalidToken, err error)
	PutTInvalidToken(ctx context.Context, _headers map[string]string, body dto.TInvalidToken, options Options) (_resp *resty.Response, re error)
	DeleteTInvalidToken_Id(ctx context.Context, _headers map[string]string, id int32, options Options) (_resp *resty.Response, re error)
	GetTInvalidTokens(ctx context.Context, _headers map[string]string, parameter dto.Parameter, options Options) (_resp *resty.Response, data dto.Page, err error)
	PostTJjj(ctx context.Context, _headers map[string]string, body dto.TJjj, options Options) (_resp *resty.Response, data int32, err error)
	PostTJjjs(ctx context.Context, _headers map[string]string, body []dto.TJjj, options Options) (_resp *resty.Response, data []int32, err error)
	GetTJjj_Id(ctx context.Context, _headers map[string]string, id int32, options Options) (_resp *resty.Response, data dto.TJjj, err error)
	PutTJjj(ctx context.Context, _headers map[string]string, body dto.TJjj, options Options) (_resp *resty.Response, re error)
	DeleteTJjj_Id(ctx context.Context, _headers map[string]string, id int32, options Options) (_resp *resty.Response, re error)
	GetTJjjs(ctx context.Context, _headers map[string]string, parameter dto.Parameter, options Options) (_resp *resty.Response, data dto.Page, err error)
	PostTPost(ctx context.Context, _headers map[string]string, body dto.TPost, options Options) (_resp *resty.Response, data int32, err error)
	PostTPosts(ctx context.Context, _headers map[string]string, body []dto.TPost, options Options) (_resp *resty.Response, data []int32, err error)
	GetTPost_Id(ctx context.Context, _headers map[string]string, id int32, options Options) (_resp *resty.Response, data dto.TPost, err error)
	PutTPost(ctx context.Context, _headers map[string]string, body dto.TPost, options Options) (_resp *resty.Response, re error)
	DeleteTPost_Id(ctx context.Context, _headers map[string]string, id int32, options Options) (_resp *resty.Response, re error)
	GetTPosts(ctx context.Context, _headers map[string]string, parameter dto.Parameter, options Options) (_resp *resty.Response, data dto.Page, err error)
	PostTUser(ctx context.Context, _headers map[string]string, body dto.TUser, options Options) (_resp *resty.Response, data int32, err error)
	PostTUsers(ctx context.Context, _headers map[string]string, body []dto.TUser, options Options) (_resp *resty.Response, data []int32, err error)
	GetTUser_Id(ctx context.Context, _headers map[string]string, id int32, options Options) (_resp *resty.Response, data dto.TUser, err error)
	PutTUser(ctx context.Context, _headers map[string]string, body dto.TUser, options Options) (_resp *resty.Response, re error)
	DeleteTUser_Id(ctx context.Context, _headers map[string]string, id int32, options Options) (_resp *resty.Response, re error)
	GetTUsers(ctx context.Context, _headers map[string]string, parameter dto.Parameter, options Options) (_resp *resty.Response, data dto.Page, err error)
	PostTWordCloudTask(ctx context.Context, _headers map[string]string, body dto.TWordCloudTask, options Options) (_resp *resty.Response, data int32, err error)
	PostTWordCloudTasks(ctx context.Context, _headers map[string]string, body []dto.TWordCloudTask, options Options) (_resp *resty.Response, data []int32, err error)
	GetTWordCloudTask_Id(ctx context.Context, _headers map[string]string, id int32, options Options) (_resp *resty.Response, data dto.TWordCloudTask, err error)
	PutTWordCloudTask(ctx context.Context, _headers map[string]string, body dto.TWordCloudTask, options Options) (_resp *resty.Response, re error)
	DeleteTWordCloudTask_Id(ctx context.Context, _headers map[string]string, id int32, options Options) (_resp *resty.Response, re error)
	GetTWordCloudTasks(ctx context.Context, _headers map[string]string, parameter dto.Parameter, options Options) (_resp *resty.Response, data dto.Page, err error)
	PostTAuthor(ctx context.Context, _headers map[string]string, body dto.TAuthor, options Options) (_resp *resty.Response, data int32, err error)
	PostTAuthors(ctx context.Context, _headers map[string]string, body []dto.TAuthor, options Options) (_resp *resty.Response, data []int32, err error)
	GetTAuthor_Id(ctx context.Context, _headers map[string]string, id int32, options Options) (_resp *resty.Response, data dto.TAuthor, err error)
	PutTAuthor(ctx context.Context, _headers map[string]string, body dto.TAuthor, options Options) (_resp *resty.Response, re error)
	DeleteTAuthor_Id(ctx context.Context, _headers map[string]string, id int32, options Options) (_resp *resty.Response, re error)
	GetTAuthors(ctx context.Context, _headers map[string]string, parameter dto.Parameter, options Options) (_resp *resty.Response, data dto.Page, err error)
	PostTClient(ctx context.Context, _headers map[string]string, body dto.TClient, options Options) (_resp *resty.Response, data int32, err error)
	PostTClients(ctx context.Context, _headers map[string]string, body []dto.TClient, options Options) (_resp *resty.Response, data []int32, err error)
	GetTClient_Id(ctx context.Context, _headers map[string]string, id int32, options Options) (_resp *resty.Response, data dto.TClient, err error)
	PutTClient(ctx context.Context, _headers map[string]string, body dto.TClient, options Options) (_resp *resty.Response, re error)
	DeleteTClient_Id(ctx context.Context, _headers map[string]string, id int32, options Options) (_resp *resty.Response, re error)
	GetTClients(ctx context.Context, _headers map[string]string, parameter dto.Parameter, options Options) (_resp *resty.Response, data dto.Page, err error)
	PostTDept(ctx context.Context, _headers map[string]string, body dto.TDept, options Options) (_resp *resty.Response, data int32, err error)
	PostTDepts(ctx context.Context, _headers map[string]string, body []dto.TDept, options Options) (_resp *resty.Response, data []int32, err error)
	GetTDept_Id(ctx context.Context, _headers map[string]string, id int32, options Options) (_resp *resty.Response, data dto.TDept, err error)
	PutTDept(ctx context.Context, _headers map[string]string, body dto.TDept, options Options) (_resp *resty.Response, re error)
	DeleteTDept_Id(ctx context.Context, _headers map[string]string, id int32, options Options) (_resp *resty.Response, re error)
	GetTDepts(ctx context.Context, _headers map[string]string, parameter dto.Parameter, options Options) (_resp *resty.Response, data dto.Page, err error)
	TAuthorPosts(ctx context.Context, _headers map[string]string, body dto.SaveAuthorReqDTO, options Options) (_resp *resty.Response, err error)
}
